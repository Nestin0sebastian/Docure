<!DOCTYPE HTML>
<html lang="en">

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/assetsb/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/assetsb/css/main.css" rel="stylesheet" type="text/css" />
    <style>
        body, html {
            background-color: #000000; /* Set the main background to black */
            color: #cfd8dc; /* Adjust text color for readability on dark background */
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            height: 100%;
            width: 100%;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: #1e1e2f; /* Additional container background color for contrast */
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header h1 {
            color: #ffffff; /* Set header text color to white */
            font-size: 2.5em;
            font-weight: 300;
        }

        .content-main {
            background-color: #1e1e2f; /* Ensure the content main area is black */
            padding: 20px;
            border-radius: 5px;
        }

        .content-main .row.align-items-center {
            background: linear-gradient(135deg, #34526f 0%, #5a245d 100%);
            padding: 10px;
            border-bottom: 1px solid #39495a;
            font-weight: bold;
            color: #ffffff; /* Ensure text color is white */
            border-radius: 5px;
        }

        .itemlist {
            margin-bottom: 20px;
            border: 1px solid #39495a;
            border-radius: 5px;
            padding: 15px;
            background-color: #2a2a3b; /* Set itemlist background to a dark gray */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .itemlist:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.6);
        }

        .itemlist img {
            max-width: 100%;
            border-radius: 5px;
        }
        .card {
    width: 100%;
}

        .itemlist h6 {
            color: #ffffff; /* Set item title color to white */
            margin-bottom: 5px;
        }

        .itemlist .text-muted {
            color: #b0bec5; /* Adjust muted text color for readability */
            margin-bottom: 5px;
        }

        .itemlist .col-fee {
            color: #ffffff;
            font-size: 18px;
        }

        .itemlist .col-place {
            color: #000000;
            font-size: 16px;
        }

        .itemlist .col-time {
            color: #c4a646;
            font-size: 16px;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            margin: 5px 0;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

        .btn-brand {
            background-color: #a37201;
            color: #ffffff; /* Ensure button text color is white */
        }

        .btn-brand:hover {
            background-color: #2980b9;
            transform: scale(1.05);
        }

        .btn-light {
            background-color: #bdc3c7;
            color: #2c3e50;
            border: 1px solid #7f8c8d;
        }
        .card {
    border: none;
}

        .btn-light:hover {
            background-color: #000000;
            color: #ecf0f1;
            transform: scale(1.05);
        }
 
    .white-text {
        color: rgb(255, 255, 255);
    }

    .card-body {
    background-color: #000000;
    padding: 1rem;
}

.card-header {
    font-size: 1.25rem;
    font-weight: bold;
    text-align: center;
}

.card {
    margin-bottom: 1rem;
}

.img-fluid {
    max-width: 100%;
    height: auto;
}

.card-title {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    color: rgb(255, 255, 255); /* Set color to white */
}


.card-text {
    font-size: 1rem;
    margin-bottom: 0.5rem;
    color: #343a40;
}

.btn-primary {
    background-color: #007bff;
    border-color: #007bff;
    transition: background-color 0.3s, border-color 0.3s;
}

.btn-primary:hover {
    background-color: #0056b3;
    border-color: #004085;
}

.shadow-sm {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
}
.card-text {
    font-size: 0.9rem; /* Smaller font size */
    margin-bottom: 0.5rem;
    color: #e4e4e4;
    line-height: 1.5; /* Adjust line height for better readability */
    font-family: 'Roboto', sans-serif; /* Specify a specific font family for a more attractive style */
}
.back-button-container {
            text-align: right; /* Align container to the right */
            margin-bottom: 20px;
        }

        .back-button {
            display: inline-block;
            padding: 10px 30px;
            background-color: #000000; /* Button background color */
            color: #ffffff; /* Button text color */
            text-align: center;
            text-decoration: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

        .back-button:hover {
            background-color: #282828; /* Darker shade on hover */
            transform: scale(1.05);
        }

        .back-button i {
            margin-right: 8px; /* Space between icon and text */
        }
        @keyframes glow {
        0% {
            text-shadow: 0 0 5px #fcfcfc, 0 0 10px #ffffff, 0 0 15px #fff5f5, 0 0 20px #ffffff, 0 0 25px #ffffff, 0 0 30px #ffffff, 0 0 35px #ffffff;
            opacity: 0.8;
        }
        50% {
            opacity: 0.8;
        }
        100% {
            text-shadow: 0 0 5px #000000, 0 0 10px #000000, 0 0 15px #000000, 0 0 20px #000000, 0 0 25px #000000, 0 0 30px #000000, 0 0 35px #000000;
            opacity: 1;
        }
    }
    .glowing-label {
        animation: glow 2s infinite;
    }
</style>


    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>

    <div class="screen-overlay"></div>

    <section class="content-main">
        <div class="back-button-container">
            <a class="back-button" href="javascript:history.back()">
                <i class="fas fa-arrow-left"></i> Back
            </a>
        </div>
        <div class="container">
            <div class="header">
                <h1><b>Doctors List</b></h1>
            </div>
            <div class="content-header">
                <select id="categorySelect" class="form-select" style="display:none; color: white;">
                    <% doctors.forEach(function(doctor) { %>
                        <option value="<%= doctor.category.name %>"><%= doctor.category.name %></option>
                    <% }); %>
                </select>
                <div style="display: flex; flex-direction: column; align-items: flex-start; margin-bottom: 20px;">
                    <label for="searchPlace" class="glowing-label" style="color: white; font-size: 18px; margin-bottom: 5px;">Find the nearest clinic:</label>
                    <div style="display: flex;">
                        <input type="text" id="searchPlace" placeholder="Enter a place" class="form-control" style="color: white; margin-right: 10px;">
                        <button class="btn btn-brand" onclick="searchByPlace()" style="background-color: #ff6347; color: white; border: none; padding: 10px 20px; font-size: 16px; border-radius: 5px;">FIND</button>
                    </div>
                </div>
                
                            </div>
            
            <script>
                function searchByPlace() {
                    const place = document.getElementById('searchPlace').value;
                    const categorySelect = document.getElementById('categorySelect');
                    const category = categorySelect.value;
            
                    fetch(`/findDoctorsNearPlace?place=${encodeURIComponent(place)}&category=${encodeURIComponent(category)}`, {
                        method: 'GET',
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.text(); // Parse response as text
                    })
                    .then(html => {
                        document.body.innerHTML = html; // Replace current body with new HTML
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                }
            </script>
            
            
            
            

           <div class="container mt-5">
    <div class="card">
       
        <div class="card-body" id="doctor-list">
            <% doctors.forEach(function(doctor) { %>
                <div class="card mb-3 ">
                    <div class="row g-0">
                        <div class="col-md-2">
                            <img src="<%= doctor.DoctorImage %>" alt="Doctor Image" class="img-fluid rounded-start">
                        </div>
                        <div class="col-md-10">
                            <div class="card-body">
                                <h5 class="card-title" style="color: white;"><%= doctor.DoctorName %></h5>
                                <p class="card-text">
                                    <strong>Specialty:</strong> <%= doctor.category.name %><br>
                                    <strong>Experience:</strong> <%= doctor.Experience %> Years<br>
                                    <strong></strong> <i class="fas fa-map-marker-alt"></i> <%= doctor.clinic %><br>
                                    <strong>Fee:</strong> ₹<%= doctor.Fee %>/-
                                </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-muted"><%= doctor.Time %></span>
<!-- Replace this part with your dynamic HTML template rendering system (e.g., EJS) -->
                    <a href="/appointmentget?name=<%= doctor.DoctorName %>&category=<%= doctor.category.name %>&fee=<%= doctor.Fee %>&doctor=<%= doctor.DoctorName %>" class="btn btn-primary">Book Appointment</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>
</div>

        </div>
    </section>
 
    
    

    <script src="/assetsb/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/assetsb/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/assetsb/js/vendors/select2.min.js"></script>
    <script src="/assetsb/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assetsb/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/assetsb/js/main.js" type="text/javascript"></script>

    <script>
        function findNearbyDoctors() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(position => {
                    const { latitude, longitude } = position.coords;
                    const maxDistance = 5; // Maximum distance in kilometers

                    fetch(`/nearby-doctors?latitude=${latitude}&longitude=${longitude}&maxDistance=${maxDistance}`)
                        .then(response => response.text())
                        .then(data => {
                            document.getElementById('doctor-list').innerHTML = data;
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                });
            } else {
                alert('Geolocation is not supported by this browser.');
            }
        }











   

function successCallback(position) {
    // Extract latitude and longitude from the position object
    const latitude = position.coords.latitude;
    const longitude = position.coords.longitude;

    // Send latitude and longitude to the server
    const location = { latitude, longitude };
    alert(location)
    fetch('/findnearby', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ location })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Failed to fetch nearby doctors');
        }
        return response.json();
    })
    .then(data => {
        // Display the list of nearby doctors returned from the server
        console.log(data);
        // You can update the UI to display the list of nearby doctors
    })
    .catch(error => {
        console.error(error);
    });
}

function errorCallback(error) {
    // Handle errors when getting the user's location
    console.error('Error getting user location:', error);
}

    </script>

    
</body>

</html>
